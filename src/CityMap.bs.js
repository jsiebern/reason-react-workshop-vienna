// Generated by BUCKLESCRIPT VERSION 5.0.1, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as React from "react";
import * as Emotion from "bs-emotion/src/Emotion.bs.js";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as ReactLeaflet from "react-leaflet";
import * as MaterialUi_Grid from "@jsiebern/bs-material-ui/src/MaterialUi_Grid.bs.js";
import * as MaterialUi_GridList from "@jsiebern/bs-material-ui/src/MaterialUi_GridList.bs.js";
import * as MaterialUi_GridListTile from "@jsiebern/bs-material-ui/src/MaterialUi_GridListTile.bs.js";
import * as CitySummary$ReactTemplate from "./CitySummary.bs.js";
import * as MaterialUi_GridListTileBar from "@jsiebern/bs-material-ui/src/MaterialUi_GridListTileBar.bs.js";

var popup = Emotion.css(undefined, /* [] */0);

var Style = /* module */[/* popup */popup];

function CityMap(Props) {
  var cities = Props.cities;
  var selected = Props.selected;
  var selected$1 = Belt_Option.flatMap(cities, (function (city) {
          return Belt_Array.get(Belt_Array.keep(city, (function (c) {
                            return c[/* name */1] === selected;
                          })), 0);
        }));
  if (selected$1 !== undefined && cities !== undefined) {
    var city = selected$1;
    return React.createElement(MaterialUi_Grid.make, {
                children: null,
                className: Emotion.css(undefined, /* :: */[
                      Emotion.height(Emotion.pct(100)),
                      /* [] */0
                    ]),
                container: true
              }, React.createElement(MaterialUi_Grid.make, {
                    children: React.createElement(ReactLeaflet.Map, {
                          center: /* tuple */[
                            city[/* coordinates */3][/* lat */0],
                            city[/* coordinates */3][/* lng */1]
                          ],
                          zoom: 13,
                          children: null
                        }, React.createElement(ReactLeaflet.TileLayer, {
                              url: "http://{s}.tile.osm.org/{z}/{x}/{y}.png",
                              attribution: "&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors"
                            }), Belt_Array.map(cities, (function (city) {
                                return React.createElement(ReactLeaflet.Marker, {
                                            position: /* tuple */[
                                              city[/* coordinates */3][/* lat */0],
                                              city[/* coordinates */3][/* lng */1]
                                            ],
                                            children: React.createElement(ReactLeaflet.Popup, {
                                                  children: React.createElement(MaterialUi_GridList.make, {
                                                        cellHeight: /* `Int */[
                                                          3654863,
                                                          180
                                                        ],
                                                        children: React.createElement(MaterialUi_GridListTile.make, {
                                                              children: null,
                                                              classes: /* :: */[
                                                                /* ImgFullWidth */Block.__(3, [Emotion.css(undefined, /* :: */[
                                                                          Emotion.width(Emotion.pct(100)),
                                                                          /* [] */0
                                                                        ])]),
                                                                /* [] */0
                                                              ]
                                                            }, React.createElement("img", {
                                                                  alt: city[/* image */4][/* attribution */1],
                                                                  src: Belt_Option.getWithDefault(city[/* image */4][/* url */0], "")
                                                                }), React.createElement(MaterialUi_GridListTileBar.make, {
                                                                  subtitle: React.createElement("span", undefined, city[/* image */4][/* attribution */1]),
                                                                  title: city[/* name */1]
                                                                })),
                                                        cols: /* `Int */[
                                                          3654863,
                                                          1
                                                        ],
                                                        spacing: /* `Int */[
                                                          3654863,
                                                          0
                                                        ]
                                                      })
                                                }),
                                            key: city[/* id */0]
                                          });
                              }))),
                    item: true,
                    md: /* V8 */7
                  }), React.createElement(MaterialUi_Grid.make, {
                    children: null,
                    item: true,
                    md: /* V4 */3
                  }, React.createElement(MaterialUi_GridList.make, {
                        cellHeight: /* `Int */[
                          3654863,
                          180
                        ],
                        children: React.createElement(MaterialUi_GridListTile.make, {
                              children: null,
                              classes: /* :: */[
                                /* ImgFullWidth */Block.__(3, [Emotion.css(undefined, /* :: */[
                                          Emotion.width(Emotion.pct(100)),
                                          /* [] */0
                                        ])]),
                                /* [] */0
                              ]
                            }, React.createElement("img", {
                                  alt: city[/* image */4][/* attribution */1],
                                  src: Belt_Option.getWithDefault(city[/* image */4][/* url */0], "")
                                }), React.createElement(MaterialUi_GridListTileBar.make, {
                                  subtitle: React.createElement("span", undefined, city[/* country */2]),
                                  title: city[/* name */1]
                                })),
                        cols: /* `Int */[
                          3654863,
                          1
                        ],
                        spacing: /* `Int */[
                          3654863,
                          0
                        ]
                      }), React.createElement("br", undefined), React.createElement(CitySummary$ReactTemplate.make, {
                        cityName: city[/* name */1],
                        key: city[/* name */1]
                      })));
  } else {
    return null;
  }
}

var make = CityMap;

export {
  Style ,
  make ,
  
}
/* popup Not a pure module */
